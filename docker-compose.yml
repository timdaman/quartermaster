version: "3"
services:
  backend:
    image: ${docker_registry-}backend:${version:-UNSET}
    build:
      dockerfile: deploy/Dockerfile-backend
      context: .
    depends_on:
      - db
    ports:
      - 8001:8000
    volumes:
      - ${SETTINGS_DIR:-./quartermaster_server/quartermaster/settings/}:/quartermaster/quartermaster/settings/:ro
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-quartermaster.settings.example_settings}
    networks:
      - internal
    restart: always

  tasks:
    image: ${docker_registry-}tasks:${version:-UNSET}
    build:
      dockerfile: deploy/Dockerfile-backend
      context: .
    entrypoint: [ "python", "./manage.py", "run_huey" ]
    depends_on:
      - redis
      - db
    volumes:
      - ${SETTINGS_FILE:-./quartermaster_server/quartermaster/settings/example_settings.py}:/quartermaster/quartermaster/settings/settings.py:ro
    environment:
      -DJANGO_SETTINGS_MODULE=quartermaster.settings.settings
    networks:
      - internal
    restart: always

  redis:
    image: redis:5-alpine
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - internal
    restart: always

  frontend:
    image: ${docker_registry:-}frontend:${version:-UNSET}
    build:
      dockerfile: deploy/Dockerfile-frontend
      context: .
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${TLS_KEY-./tls.key}:/tls.key:ro
      - ${TLS_CHAIN-./tls_chain.crt}:/tls_chain.crt:ro
    networks:
      - internal
    restart: always

  db:
    image: postgres:12.1
    volumes:
      - quartermaster_db:/var/lib/postgresql/data:rw
#    ports:
#      - 127.0.0.1:5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-quartermaster}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-quartermaster}
    networks:
      - internal
    restart: always

volumes:
  quartermaster_db:

networks:
  internal:
    driver: bridge
